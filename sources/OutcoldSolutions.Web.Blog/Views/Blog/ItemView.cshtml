@model BlogPost
@using Microsoft.Web.Helpers
@using OutcoldSolutions.Web.Blog.Helpers
@using OutcoldSolutions.Web.Blog.Models
@using OutcoldSolutions.Web.Blog.Resources
@{
	ViewBag.Title = Model.Title;
}


<article>
        
    <div class="article-title">
        <time datetime="@Model.Date.ToString("o")" pubdate="pubdate">@Model.Date.ToString("dd.MM.yyyy HH:mm") UTC</time>
        <h1>@Model.Title </h1>
    </div>
    
    @Html.Raw(Model.HtmlText)

</article>

<div class="clear-fix default-vertical-padding">
	<div class="float-right">
	    @Html.Partial("TagsLine", Model.Tags.ToList()) 
	</div>
</div>

<div class="clear-fix">
	@{ var posts = (List<BlogPost>)ViewData["simpleposts"]; }
	@if (posts.Count > 0) { 
		<section class="float-left">
		    <h4>@Html.GetResource("YouMightAlsoLike")</h4>
		    <ul>
		        @foreach (BlogPost post in posts)
		        {
		            <li>@Html.ActionLink(post.Title, "show", "blog", new {id = post.PostID, lang = post.Language}, null) </li>
		        } 
		    </ul>
		</section>
	}
	<div class="subscription float-right">
		@Html.Partial("SubscriptionButtons")
	</div>
</div>

<section>
    @{ var comments = (List<Comment>) ViewData["comments"]; }
	
    <h2>@Html.GetResource("Comments")  (@comments.Count)</h2>

    <div id="comments">
    @foreach (Comment comment in comments)
    {
	    @Html.Partial("CommentViewItem", comment)
    }
    </div>
</section>


<fieldset class="comment-edit" id="addComment">
    
    <legend>@Html.GetResource("AddComment") </legend>

    <div class="info">@Html.Raw(Html.GetResource("NotificationInformation"))</div>

    <div id="notification" class="notification"><h4></h4></div>

    <div class="fields-section">
        <p>
            <label for="Name">@Html.GetResource("Name"):</label>
            <input type="text" id="Name" placeholder="@Html.GetResource("InputName")" />
        </p>

        <p>
            <label for="Email">@Html.GetResource("Email"):</label>
            <input type="email" id="Email" placeholder="@Html.GetResource("InputEmail")" />
        </p>

        <p>
            <label for="WebSite">@Html.GetResource("Web"):</label>
            <input type="url" id="WebSite" placeholder="@Html.GetResource("InputWeb")" />
        </p>

        <p>
            <span>
                <input type="checkbox" id="commentNeedInform" value="false" />&nbsp;
                <label for="commentNeedInform">@Html.GetResource("SendNotifications")</label>
            </span>
        </p>
    </div>

    <div class="comment-body-section">
        <p>
            <label for="commentBody">@Html.GetResource("Body"):</label>
            <textarea id="commentBody" cols="4" rows="10" placeholder="@Html.GetResource("InputComment")" ></textarea>
        </p>
    </div>
    
    <div class="clear-fix-b float-right default-vertical-padding">
        <img alt="busy"  src="~/Content/images/busy.gif" id="busyIndicator" />

        <input  type="button" id="btnShowPreview" value="@Html.GetResource("Preview")" />

        <input  type="button" id="btnAddComment" value="@Html.GetResource("Add")" />
    </div>

</fieldset>

<script type="text/javascript">
    var fillBodyComment = "@Html.Encode(Html.GetResource("FillBodyComment")) <br /><br />";
    var fillEmailComment = "@Html.Encode(Html.GetResource("FillEmailComment")) <br /><br />";
    var commentAddUrl = "@Url.Action("add", "comment", new { id = Model.PostID })";
    var commentPreviewUrl = "@Url.Action("preview", "comment", new { id = Model.PostID })";
    var couldntAddComment = "@Html.Encode(Html.GetResource("CouldntAddComment"))";
    var couldntShowPreview = "@Html.Encode(Html.GetResource("CouldntShowPreview"))";
</script>
 @Scripts.Render("~/bundles/itemview")


